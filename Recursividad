
#include <stdio.h>

int main() {
    int numero = 10; // Variable entera
    int *apuntador; // Declaración de un apuntador a entero

    apuntador = &numero; // Asignación de la dirección de memoria de 'numero' a 'apuntador'

    printf("Valor de 'numero': %d\n", numero);
    printf("Dirección de memoria de 'numero': %p\n", &numero);
    printf("Valor de 'apuntador': %p\n", apuntador);
    printf("Valor apuntado por 'apuntador': %d\n", *apuntador);

    // Modificando el valor de 'numero' a través del apuntador
    *apuntador = 20;

    printf("Valor de 'numero' después de modificarlo a través del apuntador: %d\n", numero);

    return 0;
}
```

En este código, se declara una variable entera `numero` con valor `10`. Luego, se declara un apuntador a entero llamado `apuntador`. Se asigna la dirección de memoria de `numero` a `apuntador` utilizando el operador `&`. Después, se imprimen los valores de `numero`, la dirección de memoria de `numero`, el valor de `apuntador` y el valor apuntado por `apuntador`. Finalmente, se modifica el valor de `numero` a través del apuntador y se imprime el nuevo valor de `numero`. Recuerda que los apuntadores son variables que almacenan direcciones de memoria y se utilizan para acceder y modificar los valores de las variables a las que apuntan.
